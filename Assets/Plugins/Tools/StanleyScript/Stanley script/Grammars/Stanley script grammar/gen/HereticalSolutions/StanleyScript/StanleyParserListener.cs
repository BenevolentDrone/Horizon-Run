//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Lorem ipsum/Repositories/Unity/VOLMI/Shaken realm/Assets/Plugins/Tools/StanleyScript/Stanley script/Grammars/Stanley script grammar/StanleyParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HereticalSolutions.StanleyScript {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="StanleyParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IStanleyParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] StanleyParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] StanleyParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] StanleyParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] StanleyParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationStatement([NotNull] StanleyParser.DeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationStatement([NotNull] StanleyParser.DeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.actionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionStatement([NotNull] StanleyParser.ActionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.actionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionStatement([NotNull] StanleyParser.ActionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStatement([NotNull] StanleyParser.AssignmentStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStatement([NotNull] StanleyParser.AssignmentStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.eventHandlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventHandlerStatement([NotNull] StanleyParser.EventHandlerStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.eventHandlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventHandlerStatement([NotNull] StanleyParser.EventHandlerStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.delegateHandlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDelegateHandlerStatement([NotNull] StanleyParser.DelegateHandlerStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.delegateHandlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDelegateHandlerStatement([NotNull] StanleyParser.DelegateHandlerStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.assertStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssertStatement([NotNull] StanleyParser.AssertStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.assertStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssertStatement([NotNull] StanleyParser.AssertStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.timeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeStatement([NotNull] StanleyParser.TimeStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.timeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeStatement([NotNull] StanleyParser.TimeStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.eventStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventStatement([NotNull] StanleyParser.EventStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.eventStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventStatement([NotNull] StanleyParser.EventStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] StanleyParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] StanleyParser.LoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.listOperationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListOperationStatement([NotNull] StanleyParser.ListOperationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.listOperationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListOperationStatement([NotNull] StanleyParser.ListOperationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.programStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramStatement([NotNull] StanleyParser.ProgramStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.programStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramStatement([NotNull] StanleyParser.ProgramStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalStatement([NotNull] StanleyParser.ConditionalStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalStatement([NotNull] StanleyParser.ConditionalStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.subject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubject([NotNull] StanleyParser.SubjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.subject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubject([NotNull] StanleyParser.SubjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.elseIfClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfClause([NotNull] StanleyParser.ElseIfClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.elseIfClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfClause([NotNull] StanleyParser.ElseIfClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.elseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseClause([NotNull] StanleyParser.ElseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.elseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseClause([NotNull] StanleyParser.ElseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.actionArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionArguments([NotNull] StanleyParser.ActionArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.actionArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionArguments([NotNull] StanleyParser.ActionArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] StanleyParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] StanleyParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] StanleyParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] StanleyParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] StanleyParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] StanleyParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.timeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeExpression([NotNull] StanleyParser.TimeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.timeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeExpression([NotNull] StanleyParser.TimeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.subjectReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubjectReference([NotNull] StanleyParser.SubjectReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.subjectReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubjectReference([NotNull] StanleyParser.SubjectReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.listValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListValue([NotNull] StanleyParser.ListValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.listValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListValue([NotNull] StanleyParser.ListValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.article"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArticle([NotNull] StanleyParser.ArticleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.article"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArticle([NotNull] StanleyParser.ArticleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.preposition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreposition([NotNull] StanleyParser.PrepositionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.preposition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreposition([NotNull] StanleyParser.PrepositionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.timeUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeUnit([NotNull] StanleyParser.TimeUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.timeUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeUnit([NotNull] StanleyParser.TimeUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperation([NotNull] StanleyParser.OperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperation([NotNull] StanleyParser.OperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] StanleyParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] StanleyParser.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="StanleyParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] StanleyParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StanleyParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] StanleyParser.TypeNameContext context);
}
} // namespace HereticalSolutions.StanleyScript
